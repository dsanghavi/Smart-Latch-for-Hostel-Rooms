
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000102  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000156  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000054  00000000  00000000  00000176  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000001a4  00000000  00000000  000001ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000f5  00000000  00000000  0000036e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000207  00000000  00000000  00000463  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000060  00000000  00000000  0000066c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000d0  00000000  00000000  000006cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000046  00000000  00000000  0000079c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	17 c0       	rjmp	.+46     	; 0x32 <__bad_interrupt>
   4:	16 c0       	rjmp	.+44     	; 0x32 <__bad_interrupt>
   6:	15 c0       	rjmp	.+42     	; 0x32 <__bad_interrupt>
   8:	14 c0       	rjmp	.+40     	; 0x32 <__bad_interrupt>
   a:	13 c0       	rjmp	.+38     	; 0x32 <__bad_interrupt>
   c:	12 c0       	rjmp	.+36     	; 0x32 <__bad_interrupt>
   e:	11 c0       	rjmp	.+34     	; 0x32 <__bad_interrupt>
  10:	10 c0       	rjmp	.+32     	; 0x32 <__bad_interrupt>
  12:	0f c0       	rjmp	.+30     	; 0x32 <__bad_interrupt>
  14:	0e c0       	rjmp	.+28     	; 0x32 <__bad_interrupt>
  16:	0d c0       	rjmp	.+26     	; 0x32 <__bad_interrupt>
  18:	0c c0       	rjmp	.+24     	; 0x32 <__bad_interrupt>
  1a:	0b c0       	rjmp	.+22     	; 0x32 <__bad_interrupt>
  1c:	0a c0       	rjmp	.+20     	; 0x32 <__bad_interrupt>
  1e:	09 c0       	rjmp	.+18     	; 0x32 <__bad_interrupt>
  20:	08 c0       	rjmp	.+16     	; 0x32 <__bad_interrupt>
  22:	07 c0       	rjmp	.+14     	; 0x32 <__bad_interrupt>
  24:	06 c0       	rjmp	.+12     	; 0x32 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf ed       	ldi	r28, 0xDF	; 223
  2c:	cd bf       	out	0x3d, r28	; 61
  2e:	33 d0       	rcall	.+102    	; 0x96 <main>
  30:	66 c0       	rjmp	.+204    	; 0xfe <_exit>

00000032 <__bad_interrupt>:
  32:	e6 cf       	rjmp	.-52     	; 0x0 <__vectors>

00000034 <delay_ms>:
#define FAN PD6
#define LIGHT PD5
#define RESET PD3

void delay_ms(uint8_t ms) 
{
  34:	df 93       	push	r29
  36:	cf 93       	push	r28
  38:	00 d0       	rcall	.+0      	; 0x3a <delay_ms+0x6>
  3a:	cd b7       	in	r28, 0x3d	; 61
  3c:	de b7       	in	r29, 0x3e	; 62
  3e:	28 2f       	mov	r18, r24
  40:	0e c0       	rjmp	.+28     	; 0x5e <__SREG__+0x1f>
   uint16_t delay_count = F_CPU / 17500;
   volatile uint16_t i;
 
   while (ms != 0) {
     for (i=0; i != delay_count; i++);
  42:	1a 82       	std	Y+2, r1	; 0x02
  44:	19 82       	std	Y+1, r1	; 0x01
  46:	05 c0       	rjmp	.+10     	; 0x52 <__SREG__+0x13>
  48:	89 81       	ldd	r24, Y+1	; 0x01
  4a:	9a 81       	ldd	r25, Y+2	; 0x02
  4c:	01 96       	adiw	r24, 0x01	; 1
  4e:	9a 83       	std	Y+2, r25	; 0x02
  50:	89 83       	std	Y+1, r24	; 0x01
  52:	89 81       	ldd	r24, Y+1	; 0x01
  54:	9a 81       	ldd	r25, Y+2	; 0x02
  56:	89 5c       	subi	r24, 0xC9	; 201
  58:	91 40       	sbci	r25, 0x01	; 1
  5a:	b1 f7       	brne	.-20     	; 0x48 <__SREG__+0x9>
     ms--;
  5c:	21 50       	subi	r18, 0x01	; 1
void delay_ms(uint8_t ms) 
{
   uint16_t delay_count = F_CPU / 17500;
   volatile uint16_t i;
 
   while (ms != 0) {
  5e:	22 23       	and	r18, r18
  60:	81 f7       	brne	.-32     	; 0x42 <__SREG__+0x3>
     for (i=0; i != delay_count; i++);
     ms--;
   }
}
  62:	0f 90       	pop	r0
  64:	0f 90       	pop	r0
  66:	cf 91       	pop	r28
  68:	df 91       	pop	r29
  6a:	08 95       	ret

0000006c <switchOn>:

void switchOn()
{
	PORTD |=  (1 << FAN);
  6c:	96 9a       	sbi	0x12, 6	; 18
	PORTD |=  (1 << LIGHT);
  6e:	95 9a       	sbi	0x12, 5	; 18
}
  70:	08 95       	ret

00000072 <switchOff>:
void switchOff()
{
	PORTD &= ~(1 << FAN);
  72:	96 98       	cbi	0x12, 6	; 18
	PORTD &= ~(1 << LIGHT);
  74:	95 98       	cbi	0x12, 5	; 18
}
  76:	08 95       	ret

00000078 <resetPressed>:
	PORTD |=  (1 << FAN);
	PORTD |=  (1 << LIGHT);
}
void switchOff()
{
	PORTD &= ~(1 << FAN);
  78:	96 98       	cbi	0x12, 6	; 18
	PORTD &= ~(1 << LIGHT);
  7a:	95 98       	cbi	0x12, 5	; 18
}
*/
void resetPressed()
{
	switchOff();
	delay_ms(500);
  7c:	84 ef       	ldi	r24, 0xF4	; 244
  7e:	da df       	rcall	.-76     	; 0x34 <delay_ms>
   }
}

void switchOn()
{
	PORTD |=  (1 << FAN);
  80:	96 9a       	sbi	0x12, 6	; 18
	PORTD |=  (1 << LIGHT);
  82:	95 9a       	sbi	0x12, 5	; 18
void resetPressed()
{
	switchOff();
	delay_ms(500);
	switchOn();
	delay_ms(500);
  84:	84 ef       	ldi	r24, 0xF4	; 244
  86:	d6 df       	rcall	.-84     	; 0x34 <delay_ms>
	PORTD |=  (1 << FAN);
	PORTD |=  (1 << LIGHT);
}
void switchOff()
{
	PORTD &= ~(1 << FAN);
  88:	96 98       	cbi	0x12, 6	; 18
	PORTD &= ~(1 << LIGHT);
  8a:	95 98       	cbi	0x12, 5	; 18
	switchOff();
	delay_ms(500);
	switchOn();
	delay_ms(500);
	switchOff();
	delay_ms(500);
  8c:	84 ef       	ldi	r24, 0xF4	; 244
  8e:	d2 df       	rcall	.-92     	; 0x34 <delay_ms>
   }
}

void switchOn()
{
	PORTD |=  (1 << FAN);
  90:	96 9a       	sbi	0x12, 6	; 18
	PORTD |=  (1 << LIGHT);
  92:	95 9a       	sbi	0x12, 5	; 18
	switchOn();
	delay_ms(500);
	switchOff();
	delay_ms(500);
	switchOn();
}
  94:	08 95       	ret

00000096 <main>:

int main(void)
{
  96:	cf 93       	push	r28
  98:	df 93       	push	r29
    DDRD |= (1 << FAN);    // Setting it as output
  9a:	8e 9a       	sbi	0x11, 6	; 17
    DDRD |= (1 << LIGHT);
  9c:	8d 9a       	sbi	0x11, 5	; 17
	DDRD &= ~(1 << RESET);  //Input
  9e:	8b 98       	cbi	0x11, 3	; 17
	PORTD |= (1 << RESET);    // enable pull-up resistor
  a0:	93 9a       	sbi	0x12, 3	; 18
   }
}

void switchOn()
{
	PORTD |=  (1 << FAN);
  a2:	96 9a       	sbi	0x12, 6	; 18
	PORTD |=  (1 << LIGHT);
  a4:	95 9a       	sbi	0x12, 5	; 18
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	0c c0       	rjmp	.+24     	; 0xc4 <main+0x2e>
  ac:	80 e0       	ldi	r24, 0x00	; 0
  ae:	90 e0       	ldi	r25, 0x00	; 0
	int state = 0;
	int timerVal = 0;
	switchOn();
    while(1)
    {
		if (!(PIND & (1 << RESET))) {   //reset switch closed
  b0:	83 99       	sbic	0x10, 3	; 16
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <main+0x22>
			state = 0;
			resetPressed();
  b4:	e1 df       	rcall	.-62     	; 0x78 <resetPressed>
  b6:	02 c0       	rjmp	.+4      	; 0xbc <main+0x26>
			
		}
		if(state==0) { 		//Normal State------------------------------
  b8:	00 97       	sbiw	r24, 0x00	; 0
  ba:	39 f4       	brne	.+14     	; 0xca <main+0x34>
			if (!(ACSR & (1 << ACO))) { 		//Latch Closed
  bc:	45 99       	sbic	0x08, 5	; 8
  be:	f6 cf       	rjmp	.-20     	; 0xac <main+0x16>
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	c0 e0       	ldi	r28, 0x00	; 0
  c6:	d0 e0       	ldi	r29, 0x00	; 0
  c8:	f3 cf       	rjmp	.-26     	; 0xb0 <main+0x1a>
				state = 1;
				timerVal = 0;
			}
		}
		else if (state==1) { 		//Intermediate----------------------
  ca:	81 30       	cpi	r24, 0x01	; 1
  cc:	91 05       	cpc	r25, r1
  ce:	79 f4       	brne	.+30     	; 0xee <__stack+0xf>
			if (ACSR & (1 << ACO)) { 		//Latch Opened
  d0:	45 9b       	sbis	0x08, 5	; 8
  d2:	03 c0       	rjmp	.+6      	; 0xda <main+0x44>
  d4:	80 e0       	ldi	r24, 0x00	; 0
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	08 c0       	rjmp	.+16     	; 0xea <__stack+0xb>
				state = 0;
			}
			else if(timerVal>10000) {
  da:	27 e2       	ldi	r18, 0x27	; 39
  dc:	c1 31       	cpi	r28, 0x11	; 17
  de:	d2 07       	cpc	r29, r18
  e0:	24 f0       	brlt	.+8      	; 0xea <__stack+0xb>
	PORTD |=  (1 << FAN);
	PORTD |=  (1 << LIGHT);
}
void switchOff()
{
	PORTD &= ~(1 << FAN);
  e2:	96 98       	cbi	0x12, 6	; 18
	PORTD &= ~(1 << LIGHT);
  e4:	95 98       	cbi	0x12, 5	; 18
  e6:	82 e0       	ldi	r24, 0x02	; 2
  e8:	90 e0       	ldi	r25, 0x00	; 0
			}
			else if(timerVal>10000) {
				state = 2;
				switchOff();
			}
			timerVal++;
  ea:	21 96       	adiw	r28, 0x01	; 1
  ec:	e1 cf       	rjmp	.-62     	; 0xb0 <main+0x1a>
		}
        else if(state==2) { 		//Off State-------------------------
  ee:	82 30       	cpi	r24, 0x02	; 2
  f0:	91 05       	cpc	r25, r1
  f2:	f1 f6       	brne	.-68     	; 0xb0 <main+0x1a>
			if (ACSR & (1 << ACO)) { 		//Latch Opened
  f4:	45 9b       	sbis	0x08, 5	; 8
  f6:	dc cf       	rjmp	.-72     	; 0xb0 <main+0x1a>
   }
}

void switchOn()
{
	PORTD |=  (1 << FAN);
  f8:	96 9a       	sbi	0x12, 6	; 18
	PORTD |=  (1 << LIGHT);
  fa:	95 9a       	sbi	0x12, 5	; 18
  fc:	d7 cf       	rjmp	.-82     	; 0xac <main+0x16>

000000fe <_exit>:
  fe:	f8 94       	cli

00000100 <__stop_program>:
 100:	ff cf       	rjmp	.-2      	; 0x100 <__stop_program>
